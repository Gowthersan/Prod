import { CanActivateFn, Router } from '@angular/router';
import { inject } from '@angular/core';
import { AuthService } from './auth.service';

/**
 * Guard √©valuateur
 *
 * 1. V√©rifie si l'utilisateur a un token local
 * 2. V√©rifie que l'utilisateur a le r√¥le EVALUATEUR
 * 3. Si non authentifi√© ou r√¥le insuffisant, redirige vers /evaluateur/login
 */
export const evaluateurGuard: CanActivateFn = (route, state) => {
  const auth = inject(AuthService);
  const router = inject(Router);

  console.log('üîê [EVALUATEUR GUARD] V√©rification acc√®s:', state.url);

  if (!auth.isLoggedIn()) {
    console.log('‚ùå [EVALUATEUR GUARD] Pas de token ‚Üí /evaluateur/login');
    return router.createUrlTree(['/evaluateur/login'], { queryParams: { returnUrl: state.url } });
  }

  const role = localStorage.getItem('role');
  const user = auth.user();

  console.log('üîç [EVALUATEUR GUARD] R√¥le:', role, '| User role:', user?.role);

  if (role !== 'EVALUATEUR' && user?.role !== 'EVALUATEUR') {
    console.log('‚ùå [EVALUATEUR GUARD] R√¥le insuffisant ‚Üí /evaluateur/login');
    return router.createUrlTree(['/evaluateur/login']);
  }

  console.log('‚úÖ [EVALUATEUR GUARD] Acc√®s autoris√© pour √©valuateur');
  return true;
};